---
- name: Pause Uptime Kuma Monitoring
  hosts: Ansible
  become: yes
  gather_facts: false
  tasks:
    - name: Enable maintenance mode
      lucasheld.uptime_kuma.maintenance:
        api_url: "{{ uptimekuma_url }}"
        title: CI/CD
        state: paused

- name: Sparse clone of relevant Docker Compose directories
  hosts: all
  become: true
  vars:
    repo_url: "{{ docker_git }}"
    clone_dir: "{{ docker_path }}"
    branch: "main"

  tasks:
    - name: Ensure clone directory exists
      file:
        path: "{{ clone_dir }}"
        state: directory

    - name: Initialize git repository
      shell: git init
      args:
        chdir: "{{ clone_dir }}"
      register: init_output
      changed_when: "'Reinitialized existing Git repository' not in init_output.stdout"

    - name: Remove existing origin if present
      shell: git remote remove origin
      args:
        chdir: "{{ clone_dir }}"
      ignore_errors: true

    - name: Add remote origin
      shell: git remote add origin {{ repo_url }}
      args:
        chdir: "{{ clone_dir }}"
      ignore_errors: true

    - name: Enable sparse checkout
      shell: git config core.sparseCheckout true
      args:
        chdir: "{{ clone_dir }}"

    - name: Define sparse checkout paths
      copy:
        content: |
          {% for dir in compose_dirs %}
          {{ dir }}/
          {% endfor %}
        dest: "{{ clone_dir }}/.git/info/sparse-checkout"

    - name: Discard local changes before pulling
      shell: git reset --hard
      args:
        chdir: "{{ clone_dir }}"

    - name: Pull selected directories from repository
      shell: git pull origin {{ branch }}
      args:
        chdir: "{{ clone_dir }}"

    - name: Copy static .env files
      copy:
        src: "files/{{ item }}.env"
        dest: "{{ clone_dir }}/{{ item }}/.env"
      loop: "{{ compose_dirs }}"
      ignore_errors: true  # Optional: skip if no template exists
      tags: env

    - name: Run Docker Compose
      shell: |
        docker compose pull
        docker compose down
        docker compose up -d --force-recreate --remove-orphans
      args:
        chdir: "{{ clone_dir }}/{{ item }}"
      loop: "{{ compose_dirs }}"

- name: Resume Uptime Kuma Monitoring
  hosts: Ansible
  become: yes
  connection: local
  gather_facts: false
  tasks:
    - name: Disable maintenance mode
      lucasheld.uptime_kuma.maintenance:
        api_url: "{{ uptimekuma_url }}"
        title: CI/CD
        state: resumed
